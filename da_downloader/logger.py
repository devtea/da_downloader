'''
logger.py
consolidated logging module
'''
from __future__ import division, absolute_import, print_function, unicode_literals

import logging
import traceback
import sys

log = logging.getLogger('logger')

logging.basicConfig(
    format='%(asctime)s %(levelname)s [%(module)s]: %(message)s',
    #datefmt='%Y-%m-%d %H:%M:%S',
    #TODO don't hardcode this
    filename='out.log',
    level=logging.WARNING
)


def custom_exception_hook(*args):
    formatted = "".join(traceback.format_exception(*args))
    logging.critical("Unhandled exception\n%s" % formatted)
sys.excepthook = custom_exception_hook


def getLogger():
    '''Returns the shared logging object generated by this module for use
    throughout the project'''
    return log
